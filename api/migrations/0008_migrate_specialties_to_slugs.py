# Generated by Django 5.0.6 on 2025-10-15 17:29

from django.db import migrations


def forwards(apps, schema_editor):
    import unicodedata

    PsicologoProfile = apps.get_model('api', 'PsicologoProfile')

    # Mapa robusto: claves normalizadas (minúsculas, sin acentos, trim)
    MAP = {
        'psiquiatria': 'psiquiatria',
        'psicologia clinica': 'psicologia_clinica',
        'psicologia infantil y adolescente': 'infanto_juvenil',
        'infanto juvenil': 'infanto_juvenil',
        'terapia de pareja': 'pareja_familia',
        'terapia de pareja y familia': 'pareja_familia',
        'neuropsicologia': 'neuropsicologia',
        'sexologia clinica': 'sexologia_clinica',
        'adicciones': 'adicciones',
        'psicologia geriatrica': 'gerontopsicologia',
        'gerontopsicologia': 'gerontopsicologia',
        'psicologia de la salud': 'psicologia_salud',
        'evaluacion psicologica': 'evaluacion_psicologica',
        'psicologia educativa': 'psicologia_educativa',
        'otro': 'otro',
        # agrega aquí variantes que tengas en producción
    }

    def normalize(s: str) -> str:
        s = (s or '').strip().lower()
        s = ''.join(c for c in unicodedata.normalize('NFKD', s) if not unicodedata.combining(c))
        return s

    batch = []
    for p in PsicologoProfile.objects.all().only('pk', 'specialty').iterator():
        old = p.specialty
        norm = normalize(old)
        new = MAP.get(norm, 'otro')  # fallback a 'otro' si no encontramos match
        if new != old and new:
            batch.append((p.pk, new))

    # Actualiza en batch (más eficiente)
    for pk, new in batch:
        PsicologoProfile.objects.filter(pk=pk).update(specialty=new)

def backwards(apps, schema_editor):
    PsicologoProfile = apps.get_model('api', 'PsicologoProfile')
    # Mapa inverso (slugs -> label anterior). Usa los labels que tenías antes.
    REV = {
        'psiquiatria': 'Psiquiatría',
        'psicologia_clinica': 'Psicología Clínica',
        'infanto_juvenil': 'Psicología Infantil y Adolescente',
        'pareja_familia': 'Terapia de Pareja y Familia',
        'neuropsicologia': 'Neuropsicología',
        'sexologia_clinica': 'Sexología Clínica',
        'adicciones': 'Adicciones',
        'gerontopsicologia': 'Psicología Geriátrica',
        'psicologia_salud': 'Psicología de la Salud',
        'evaluacion_psicologica': 'Evaluación Psicológica',
        'psicologia_educativa': 'Psicología Educativa',
        'otro': 'Otro',
    }
    for p in PsicologoProfile.objects.all().only('pk', 'specialty').iterator():
        slug = p.specialty
        label = REV.get(slug, 'Otro')
        if label != slug:
            PsicologoProfile.objects.filter(pk=p.pk).update(specialty=label)

class Migration(migrations.Migration):
    dependencies = [
        ('api', '0007_alter_customuser_first_name_and_more'),
    ]
    operations = [
        migrations.RunPython(forwards, backwards),
    ]
